apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "yzbfp.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "yzbfp.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ template "yzbfp.serviceAccountName" . }}
      {{- if .Values.hostAliases }}
      # yamllint disable rule:indentation
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      # yamllint enable rule:indentation
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        - name: jar-retrieve
          image: registry.cn-hangzhou.aliyuncs.com/yzbfp/utils:scp-shell-20220115
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.retrieveJarCommand "context" $) | nindent 12 }}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: yzbfp-handtenpay-data
              mountPath: /app
            - name: ssh-deploy-keys
              mountPath: /root/.ssh
        {{- if .Values.cloneStaticSiteFromGit.enabled }}
        - name: git-clone-repository
          image: {{ include "yzbfp.cloneStaticSiteFromGit.image" . }}
          imagePullPolicy: {{ .Values.cloneStaticSiteFromGit.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.gitClone.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.cloneStaticSiteFromGit.gitClone.command "context" $) | nindent 12 }}
          {{- else }}
          command:
            - /bin/bash
            - -ec
            - |
              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
              git clone {{ .Values.cloneStaticSiteFromGit.repository }} --branch {{ .Values.cloneStaticSiteFromGit.branch }} /app/keys
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.gitClone.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.cloneStaticSiteFromGit.gitClone.args "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: yzbfp-handtenpay-data
              mountPath: /app
            - name: ssh-deploy-keys
              mountPath: /root/.ssh
          {{- if .Values.cloneStaticSiteFromGit.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.cloneStaticSiteFromGit.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.extraEnvVars }}
          env:
            {{- include "common.tplvalues.render" (dict "value" .Values.cloneStaticSiteFromGit.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "yzbfp.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - sh
            - -c
            - |
              chown -R "bfp:bfp" "/app"
          securityContext: {{- .Values.volumePermissions.securityContext | toYaml | nindent 12 }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: yzbfp-handtenpay-data
              mountPath: /app
        {{- end }}
      containers:
        - name: {{ template "yzbfp.fullname" . }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.containerSecurityContext.runAsUser }}
          {{- end }}
          image: {{ template "yzbfp.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: BASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "handtenpay-url"
            - name: MQ_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-host"
            - name: MQ_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-port"
            - name: MQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-username"
            - name: MQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-password"
            - name: MQ_VIRTUAL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-virtual-host"
            - name: MQ_SSL_ENABLED
              value: {{ .Values.xdfHandtenpay.messageQueue.ssl.enabled }}
            - name: MQ_SSL_KSTORE
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-ssl-key-store"
            - name: MQ_SSL_KSTORE_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-ssl-key-store-password"
            - name: MQ_SSL_TSTORE
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "mq-ssl-trust-store"
            - name: MQ_SSL_ALG
              value: {{ .Values.xdfHandtenpay.messageQueue.ssl.algorithm | quote }}
            - name: MQ_SSL_KEY_STYPE
              value: {{ .Values.xdfHandtenpay.messageQueue.ssl.keyStoreType | quote }}
            - name: MQ_SSL_VSC
              value: {{ .Values.xdfHandtenpay.messageQueue.ssl.validateServerCertificate }}
            - name: MQ_SSL_VHN
              value: {{ .Values.xdfHandtenpay.messageQueue.ssl.verifyHostname }}
            - name: FTP_IP
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "ftp-ip"
            - name: FTP_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "ftp-port"
            - name: FTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "ftp-username"
            - name: FTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "ftp-password"
            - name: FTP_CATALOGUE
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "ftp-catalogue"
            - name: BFP_PRIVATE_KEY_FILE
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "bfp-rsa"
            - name: HANDTENPAY_PUB_FILE
              valueFrom:
                secretKeyRef:
                  name: {{ include "yzbfp.handtenpay" . | quote }}
                  key: "handtenpay-pub"
            - name: DEPLOY_PROFILE
              value: {{ .Values.deployProfile | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- else if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: yzbfp-handtenpay-data
              mountPath: /app
            {{- if .Values.customPostInitScripts }}
            - mountPath: /docker-entrypoint-init.d
              name: custom-postinit
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: ssh-deploy-keys
          secret:
            secretName: ssh-keys
            items:
            - key: id_rsa
              path: id_rsa
              mode: 384
            - key: known_hosts
              path: known_hosts
              mode: 438
        - name: yzbfp-handtenpay-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "yzbfp.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.customPostInitScripts }}
        - name: custom-postinit
          configMap:
            name: {{ printf "%s-postinit" (include "common.names.fullname" .) }}
            defaultMode: 0755
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
