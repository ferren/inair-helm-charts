apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "hict.fullname.igate" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "hict.labels.standard.igate" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{- include "hict.labels.matchLabels.igate" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "hict.labels.standard.igate" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "hict.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "hict.serviceAccountName" . }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        - name: jar-retrieve
          image: registry.cn-shenzhen.aliyuncs.com/inair/utils:scp-shell-20230228
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.retrieveJarIGateCommand "context" $) | nindent 12 }}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: hict-app
              mountPath: /app
            - name: ssh-deploy-keys
              mountPath: /root/.ssh
        {{- if .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "hict.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - sh
            - -c
            - |
              chown -R "hict:hict" "/app"
          securityContext: {{- .Values.volumePermissions.securityContext | toYaml | nindent 12 }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: hict-app
              mountPath: /app
        {{- end }}
      containers:
        - name: {{ template "common.names.fullname" . }}
          image: {{ template "hict.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: ORACLE_HOST
              value: {{ template "hict.databaseHost" . }}
            - name: ORACLE_PORT
              value: {{ template "hict.databasePort" . }}
            - name: ORACLE_DB
              value: {{ template "hict.databaseName" . }}
            - name: ORACLE_USER
              value: {{ template "hict.databaseUser" . }}
            - name: ORACLE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "hict.databaseSecretName" . }}
                  key: {{ include "hict.databaseSecretPasswordKey" . }}
            - name: REDIS_HOST
              value: {{ template "hict.redisHost" . }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "hict.redisSecretName" . }}
                  key: {{ include "hict.redisSecretPasswordKey" . }}
            - name: ROOT_FILE_PATH
              value: {{ .Values.filePath.root }}
            - name: S_FILE_PATH
              value: {{ .Values.filePath.storable }}
            - name: LOGGING_PATH
              value: {{ .Values.filePath.logging }}
            - name: NGEN_WS_GATEX_CNAME
              value: {{ .Values.ngen.wsGatexCName }}
            - name: NGEN_WS_GATEX_CPWD
              value: {{ .Values.ngen.wsGatexCPwd }}
            - name: NGEN_WS_GATEX_URI
              value: {{ .Values.ngen.wsGatexUri }}
            - name: NGEN_WS_TCMS_CNAME
              value: {{ .Values.ngen.wsTcmsCName }}
            - name: NGEN_WS_TCMS_CPWD
              value: {{ .Values.ngen.wsTcmsCPwd }}
            - name: NGEN_WS_TCMS_URI
              value: {{ .Values.ngen.wsTcmsUri }}
            - name: LDAP_URL
              value: {{ .Values.ldap.url }}
            - name: LDAP_USER_SEARCH_FILTER
              value: {{ .Values.ldap.userSearchFilter }}
            - name: LDAP_USER_DN_PATTERNS
              value: {{ .Values.ldap.userDnPatterns }}
            - name: LDAP_USER_SEARCH_BASE
              value: {{ .Values.ldap.userSearchBase }}
            - name: LDAP_MANAGER_DN
              value: {{ .Values.ldap.managerDn }}
            - name: LDAP_MANAGER_PWD
              value: {{ .Values.ldap.managerPwd }}
            - name: WX_WEAPP_APPID
              value: {{ .Values.weixin.weappAppid }}
            - name: WX_WEAPP_SECRET
              value: {{ .Values.weixin.weappSecret }}
            - name: TENCENT_CLOUND_SECRET_ID
              value: {{ .Values.tencentclound.secretId }}
            - name: TENCENT_CLOUND_SECRET_KEY
              value: {{ .Values.tencentclound.secretKey }}
            - name: TENCENT_CLOUND_SMS_APPID
              value: {{ .Values.tencentclound.smsAppId | quote }}
            - name: TENCENT_CLOUND_SMS_SIGN_NAME
              value: {{ .Values.tencentclound.smsSignName }}
            - name: TENCENT_CLOUND_SMS_TEMPLATEID
              value: {{ .Values.tencentclound.smsTemplateId | quote }}
            - name: GSS_IGATE_HOST
              value: {{ .Values.igate.host }}
          ports:
            - name: http
              containerPort: {{ coalesce .Values.containerPorts.http .Values.containerPort }}
            {{- if .Values.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraContainerPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- else if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: hict-app
              mountPath: /app
            - name: hict-logs
              mountPath: {{ .Values.filePath.logging }}
            - name: hict-files
              mountPath: {{ .Values.filePath.root }}
            {{- if .Values.customPostInitScripts }}
            - mountPath: /docker-entrypoint-init.d
              name: custom-postinit
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: ssh-deploy-keys
          secret:
            secretName: ssh-keys
            items:
            - key: id_rsa
              path: id_rsa
              mode: 384
            - key: known_hosts
              path: known_hosts
              mode: 438
        - name: hict-app
          emptyDir: {}
        - name: hict-logs
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ (tpl .Values.persistence.existingClaim $) | default (printf "%s-logs" (include "hict.fullname.igate" .) | trunc 63 | trimSuffix "-") }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: hict-files
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ (tpl .Values.persistence.existingClaim $) | default (printf "%s-files" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-") }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.customPostInitScripts }}
        - name: custom-postinit
          configMap:
            name: {{ printf "%s-postinit" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
            defaultMode: 0755
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
